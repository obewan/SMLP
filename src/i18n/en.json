{
    "-i,--import_network": "Import a network model instead of creating a new one. This must be a valid model filepath, specifically a file generated by SMLP. If this option is used, there is no need to specify layer parameters as they are included in the model.",
    "-e,--export_network":  "Export the network model after training. This must be a valid filepath. The exported model can be imported later, eliminating the need for retraining.",
    "-f,--file_input":  "Specify the data file to be used for training and testing.",
    "-s,--input_size": "The numbers of input neurons",
    "-o,--output_size": "The numbers of output neurons",
    "-d,--hidden_size": "The numbers of hidden neurons per hidden layer",
    "-c,--hiddens_count": "The count of hidden layers",
    "-p,--epochs": "The numbers of epochs retraining",
    "-l,--learning_rate": "The network training learning rate",
    "-t,--output_ends": "Indicate that the output columns of the dataset are located at the end of the record.\nBy default smlp will look at the firsts columns",
    "-r,--training_ratio": "The training ratio of the file to switch between data for training and data for testing, should be around 0.7",
    "-m,--mode": "Select the running mode:\n  - Predictive:This mode uses an input file to predict the outputs.\n    If the input file contains output columns, the predicted CSV outputs will replace them without modifying the original input file.\n    Please be mindful of the parameters (input_size, output_size, output_ends). If the input file does not contain output columns, pay close attention to the input_size parameter.\n    This mode requires a network that has been imported and trained (be sure that the model has good testing results).\n  - TestOnly: Test an imported network without training.\n  - TrainOnly: Train the network without testing.\n  - TrainThenTest: Train and then test the network (default).\n  - TrainTestMonitored: Train and test at each epoch while monitoring the progress of an output neuron. Be aware that this is slower and uses more memory.",
    "-n,--predictive_mode": "If using Predictive mode, select the output render mode:\n  - CSV: This will render the output(s) at the end or at the begining of the input line, depending of your output_ends option (default).\n  - NumberAndRaw: This will show both the predicted output(s) numbers and their raw values.\n  - NumberOnly: This will show only the predicted outputs number.\n  - RawOnly: This will only show the output(s) raw values.",
    "-y,--output_index_to_monitor": "Indicate the output neuron index to monitor during a TrainTestMonitored mode. If index = 0 there will be no progress monitoring. Default is 1, the first neuron output.",
    "-a,--hidden_activation_function": "Select the hidden neurons activation function:\n  - ELU: Exponential Linear Units, require an hidden_activation_alpha parameter.\n  - LReLU: Leaky ReLU.\n  - PReLU: Parametric ReLU, require an hidden_activation_alpha_parameter.\n  - ReLU: Rectified Linear Unit.\n  - Sigmoid (default).\n  - Tanh: Hyperbolic Tangent",
    "-b,--output_activation_function": "Select the output neurons activation function:\n  - ELU: Exponential Linear Units, require an output_activation_alpha parameter.\n  - LReLU: Leaky ReLU.\n  - PReLU: Parametric ReLU, require an output_activation_alpha parameter.\n  - ReLU: Rectified Linear Unit.\n  - Sigmoid (default).\n  - Tanh: Hyperbolic Tangent",
    "-k,--hidden_activation_alpha": "The alpha parameter value for ELU and PReLU activation functions on hidden layers",
    "-q,--output_activation_alpha": "The alpha parameter value for ELU and PReLU activation functions on output layer",
    "-v,--version": "Show current version",
    "-w,--verbose": "Verbose logs"
}